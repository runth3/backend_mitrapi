import{d as z,l as u,m as T,n as N,b as M,_ as R,r as n,g as m,o as c,w as a,e as l,f as p,c as E,u as q,p as G,h as B,t as V,F as J,j as O,q as H,s as K}from"./app-ClbCorYk.js";import{D as Q,m as W}from"./menu-DXkp5gbb.js";const X=z({name:"FaceModelImageView",props:{faceModelId:{type:Number,required:!0},userId:{type:Number,required:!0},modelValue:{type:Boolean,default:!1}},emits:["update:modelValue"],setup(e,{emit:t}){const k=u(!0),y=u(null),v=u(e.modelValue);T(()=>e.modelValue,s=>{v.value=s}),T(v,s=>{t("update:modelValue",s)});const F=async()=>{if(e.faceModelId){k.value=!0;try{const s=await M.get(`/api/face-model/${e.faceModelId}`,{headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("token")}`},responseType:"blob"});y.value=URL.createObjectURL(s.data)}catch(s){console.error("Failed to fetch image:",s)}finally{k.value=!1}}},f=()=>{console.error("Failed to load image")},I=()=>{t("update:modelValue",!1)};return N(()=>{F()}),{loading:k,imageUrl:y,handleImageError:f,dialog:v,closeModal:I}}}),Y={key:1};function Z(e,t,k,y,v,F){const f=n("v-spacer"),I=n("v-btn"),s=n("v-card-title"),d=n("v-progress-linear"),_=n("v-img"),w=n("v-icon"),h=n("v-card-text"),$=n("v-card"),b=n("v-dialog");return c(),m(b,{modelValue:e.dialog,"onUpdate:modelValue":t[0]||(t[0]=D=>e.dialog=D),"max-width":"600"},{default:a(()=>[l($,null,{default:a(()=>[l(s,null,{default:a(()=>[t[1]||(t[1]=p(" Face Model Image ")),l(f),l(I,{icon:"mdi-close",onClick:e.closeModal},null,8,["onClick"])]),_:1}),l(h,null,{default:a(()=>[e.loading?(c(),m(d,{key:0,indeterminate:"",color:"primary"})):(c(),E("div",Y,[e.imageUrl?(c(),m(_,{key:0,src:e.imageUrl,"aspect-ratio":"1",class:"grey lighten-2",cover:"",onError:e.handleImageError},null,8,["src","onError"])):(c(),m(w,{key:1},{default:a(()=>t[2]||(t[2]=[p("mdi-image-broken")])),_:1}))]))]),_:1})]),_:1})]),_:1},8,["modelValue"])}const x=R(X,[["render",Z]]),ee=z({name:"FaceModelListView",components:{DefaultLayout:Q,FaceModelImageView:x},setup(){const e=u(null),t=q(),k=G(),y=u(!0),v=u(!1),F=u(!1),f=u([]),I=u(!1),s=u(null),d=u(null),_=u(null),w=u({}),h=u(null),$=o=>new Date(o).toLocaleDateString("en-US",{year:"numeric",month:"short",day:"numeric"}),b=async o=>{try{const r=await M.get(`/api/face-model/${o}`,{headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("token")}`},responseType:"blob"}),g=URL.createObjectURL(r.data);w.value[o]=g,console.log(`Image fetched for ID ${o}:`,g)}catch(r){console.error(`Failed to fetch image for ID ${o}:`,r)}},D=async()=>{if(e.value)try{const o=await M.get(`/api/users/${e.value}`,{headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("token")}`}});h.value={username:o.data.user.username,name:o.data.user.name}}catch(o){console.error("Failed to fetch user details:",o)}};T(()=>t.params.id,o=>{if(o){const r=parseInt(o,10);isNaN(r)?(e.value=null,console.error("Invalid User ID in route parameters:",o)):(e.value=r,console.log("userId set to:",e.value),D())}else e.value=null,console.error("User ID not found in route parameters.")},{immediate:!0});const C=async()=>{if(e.value){y.value=!0;try{const o=await M.get(`/api/face-model/user/${e.value}`,{headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("token")}`}});console.log("API Response:",o.data),f.value=o.data,console.log("faceModels after fetch:",f.value);for(const r of f.value)await b(r.id)}catch(o){console.error("Failed to fetch face models:",o)}finally{y.value=!1}}},A=async(o,r)=>{v.value=!0;try{const g=await M.put(`/api/face-model/${o}/set-active`,{},{headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("token")}`}});console.log("Toggle Response:",g.data),C()}catch(g){console.error("Failed to update face model:",g)}finally{v.value=!1}},L=o=>{const r=o.target;if(r.files&&r.files.length>0){const g=r.files[0];if(console.log("Selected file:",g),console.log("File type:",g.type),console.log("File size:",g.size),!["image/jpeg","image/png","image/jpg"].includes(g.type)){alert("Please select a valid image file (JPEG, PNG, JPG)."),d.value=null;return}d.value=g}else console.warn("No file selected."),d.value=null},U=async()=>{if(!(!d.value||!e.value)){F.value=!0;try{const o=new FormData;o.append("image",d.value),o.append("user_id",e.value.toString());const r=await M.post("/api/face-model",o,{headers:{"Content-Type":"multipart/form-data",Authorization:`Bearer ${localStorage.getItem("token")}`}});console.log("Upload successful:",r.data),C(),d.value=null,_.value.reset()}catch(o){console.error("Failed to upload face model:",o),o.response&&(console.error("Error Response:",o.response),console.error("Error Response Data:",o.response.data))}finally{F.value=!1}}},S=(o,r)=>{s.value=o,I.value=!0},i=async o=>{try{await M.delete(`/api/face-model/${o}`,{headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("token")}`}}),console.log("Face model deleted:",o),C()}catch(r){console.error("Failed to delete face model:",r)}},j=o=>{console.error(`Failed to load thumbnail for model ID: ${o.id}`)},P=()=>{localStorage.removeItem("token"),k.push({name:"Login"})};return N(()=>{console.log("Component mounted, fetching face models..."),C()}),{menuItems:W,userId:e,logout:P,loading:y,toggleLoading:v,uploading:F,faceModels:f,showImageModal:I,selectedFaceModelId:s,openImageModal:S,imageFile:d,fileInput:_,handleToggleActive:A,handleImageChange:L,handleUpload:U,handleDelete:i,formatDate:$,handleThumbnailError:j,imageBlobs:w,fetchImage:b,userDetails:h}}});function oe(e,t,k,y,v,F){const f=n("v-card-title"),I=n("v-file-input"),s=n("v-btn"),d=n("v-col"),_=n("v-row"),w=n("v-progress-linear"),h=n("v-icon"),$=n("v-tooltip"),b=n("v-card-subtitle"),D=n("v-card"),C=n("v-alert"),A=n("v-card-text"),L=n("FaceModelImageView"),U=n("v-container"),S=n("default-layout");return c(),m(S,{title:"Face Model List","menu-items":e.menuItems,onLogout:e.logout},{default:a(()=>[e.userId?(c(),m(U,{key:0},{default:a(()=>[l(D,null,{default:a(()=>[e.userDetails?(c(),m(f,{key:0},{default:a(()=>[p("Face Models: "+V(e.userDetails.username)+"/"+V(e.userDetails.name),1)]),_:1})):B("",!0),l(A,null,{default:a(()=>[l(_,{class:"mt-4"},{default:a(()=>[l(d,{cols:"12"},{default:a(()=>[l(I,{ref:"fileInput",label:"Upload New Face Model",accept:"image/png, image/jpeg, image/jpg","prepend-icon":"mdi-camera",class:"mt-4",onChange:e.handleImageChange},null,8,["onChange"]),l(s,{color:"primary",class:"mt-2",loading:e.uploading,disabled:!e.imageFile,onClick:e.handleUpload},{default:a(()=>t[1]||(t[1]=[p(" Upload ")])),_:1},8,["loading","disabled","onClick"])]),_:1})]),_:1}),e.loading?(c(),m(w,{key:0,indeterminate:"",color:"primary"})):e.faceModels.length>0?(c(),m(_,{key:1,class:"mt-6"},{default:a(()=>[(c(!0),E(J,null,O(e.faceModels,i=>(c(),m(d,{key:i.id,cols:"12",sm:"6",md:"3"},{default:a(()=>[l(D,{elevation:"4",class:K(["pa-4 image-card",{"active-card":i.is_active}]),style:H({backgroundImage:`url(${e.imageBlobs[i.id]||""})`})},{default:a(()=>[l(_,{align:"center",justify:"center",class:"fill-height","no-gutters":""},{default:a(()=>[l(d,{cols:"12",class:"text-center"},{default:a(()=>[l(s,{icon:"",variant:"text",onClick:j=>e.openImageModal(i.id,e.userId)},{default:a(()=>[l(h,null,{default:a(()=>t[2]||(t[2]=[p("mdi-eye")])),_:1}),l($,{activator:"parent",location:"top"},{default:a(()=>t[3]||(t[3]=[p(" View Image ")])),_:1})]),_:2},1032,["onClick"]),l(s,{icon:"",color:i.is_active?"success":"primary",variant:"text",loading:e.toggleLoading,onClick:j=>e.handleToggleActive(i.id,i)},{default:a(()=>[l(h,null,{default:a(()=>[p(V(i.is_active?"mdi-check-circle":"mdi-circle-edit-outline"),1)]),_:2},1024),l($,{activator:"parent",location:"top"},{default:a(()=>[p(V(i.is_active?"Active":"Set as Active"),1)]),_:2},1024)]),_:2},1032,["color","loading","onClick"]),l(s,{icon:"",color:"error",variant:"text",onClick:j=>e.handleDelete(i.id)},{default:a(()=>[l(h,null,{default:a(()=>t[4]||(t[4]=[p("mdi-delete")])),_:1}),l($,{activator:"parent",location:"top"},{default:a(()=>t[5]||(t[5]=[p(" Delete ")])),_:1})]),_:2},1032,["onClick"])]),_:2},1024)]),_:2},1024),l(_,{"no-gutters":""},{default:a(()=>[l(d,{cols:"12",class:"date-container"},{default:a(()=>[l(b,{class:"date-text"},{default:a(()=>[p(" Created: "+V(e.formatDate(i.created_at)),1)]),_:2},1024)]),_:2},1024)]),_:2},1024)]),_:2},1032,["class","style"])]),_:2},1024))),128))]),_:1})):(c(),m(C,{key:2,type:"info",class:"mt-6"},{default:a(()=>t[6]||(t[6]=[p(" No face models found for this user. ")])),_:1}))]),_:1})]),_:1}),e.selectedFaceModelId&&e.showImageModal?(c(),m(L,{key:0,modelValue:e.showImageModal,"onUpdate:modelValue":t[0]||(t[0]=i=>e.showImageModal=i),faceModelId:e.selectedFaceModelId,userId:e.userId},null,8,["modelValue","faceModelId","userId"])):B("",!0)]),_:1})):(c(),m(U,{key:1},{default:a(()=>[l(C,{type:"error"},{default:a(()=>t[7]||(t[7]=[p(" User ID not found or invalid. Please check the URL. ")])),_:1})]),_:1}))]),_:1},8,["menu-items","onLogout"])}const le=R(ee,[["render",oe],["__scopeId","data-v-fd267753"]]);export{le as default};
